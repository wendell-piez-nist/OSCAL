# Last touched 2018-05-09

default namespace = "http://csrc.nist.gov/ns/oscal/1.0"

include "oscal-catalog.rnc" { start = profile }

profile = element profile { idAttr, title, import+, merge?, modify? }

import = element import { hrefAttr, (\include?, exclude?) }

# presence of element merge means to merge (not merely aggregate)
merge = element merge { combine?, (build | frame)? }

combine = element combine {
            attribute method { 'use-first' | 'merge' | 'keep' } }

build = element as-is { empty }

frame = element custom { idAttr?, optionalClass,
                         title?, (profileGroup | call | match)* }

profileGroup = element group { title?, (profileGroup | call | match)* }

modify =  element modify { (param_setting | alteration )* }

# Can have either 'all' or (a set of) 'call'
\include = element include { all | (call | match)+ }

# We are permitting include/call along with exclude/call to support tweaky with-subcontrol allowances
# But downstream (Schematron) might detect inelegant or inoperable combinations of include/call and exclude/call

# Only 'yes' should have any effect; processors should assume 'no' when implicit
all = element all { withSubContrlsAttr }

withSubContrlsAttr = attribute with-subcontrols { ('yes'|'no') }?
withContrlAttr =  attribute with-control { ('yes'|'no') }?

# 'call' can call *either* a control or a subcontrol by its @id
# Schematron requirement: there exists in the catalog a control or subcontrol
# by the given @id
# when @with-subcontrols is used, it must be @control-id
call = element call { ( withSubContrlsAttr, attribute control-id { xsd:NCName } ) |
                      ( withContrlAttr,     attribute subcontrol-id { xsd:NCName } ) }

# 'match' calls (includes) controls and subcontrols indiscriminately: when matching (as a regex) the @id,
# controls or subcontrols may be included.
# nb this means it is possible to include subcontrols w/o their controls, for later combination w/ other includes
match = element match { withSubContrlsAttr, withContrlAttr, attribute pattern { text },
  attribute order { 'keep' | 'ascending' | 'descending' }? }

exclude = element exclude { ( match |
            element call {
              attribute control-id { xsd:NCName } |
              attribute subcontrol-id { xsd:NCName } }+ ) }

# May have to loosen to value?, select? for metaschema
param_setting = element set-param {
  attribute param-id { xsd:NMTOKEN },
  optionalClass, label?, desc?, req?, (value | select)?, link*, part*, references? }

alteration = element alter { (
  attribute control-id    { xsd:NCName } |
  attribute subcontrol-id { xsd:NCName } ),
  remove*, augment* }

remove  = element remove  {
  attribute class-ref {  xsd:NMTOKENS }?,
  attribute id-ref    { xsd:NCName }?,
  attribute item-name { xsd:NCName }? }

augment = element add {
  attribute position { 'before' | 'after' | 'starting' |'ending'}?,
  (title | param | prop | part)* }
